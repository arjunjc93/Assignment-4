# -*- coding: utf-8 -*-
"""Triangle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MlY02O6n6GVzk4-RMoHnu4w4J3PWnL8s
"""

#Code by GVV Sharma
#December 7, 2019
#released under GNU GPL
#Drawing a triangle given 3 sides
import numpy as np
import matplotlib.pyplot as plt

#if using termux
import subprocess
import shlex
#end if


#Triangle sides
x = 3.9
y = 7.71
z = 6

#Coordinates of Y
p = (y**2 + z**2-x**2 )/(2*y)
q = np.sqrt(z**2-p**2)
print(p,q)
#Triangle vertices
Y = np.array([p,q]) 
X = np.array([0,0]) 
Z = np.array([y,0]) 

def line_gen(A,B):
  len =10
  dim = A.shape[0]
  x_AB = np.zeros((dim,len))
  lam_1 = np.linspace(0,1,len)
  for i in range(len):
    temp1 = A + lam_1[i]*(B-A)
    x_AB[:,i]= temp1.T
  return x_AB

#Generating all lines
x_YX = line_gen(Y,X)
x_XZ = line_gen(X,Z)
x_ZY = line_gen(Z,Y)

#Plotting all lines
plt.plot(x_YX[0,:],x_YX[1,:],label='$YX$')
plt.plot(x_XZ[0,:],x_XZ[1,:],label='$XZ$')
plt.plot(x_ZY[0,:],x_ZY[1,:],label='$ZY$')

plt.plot(Y[0], Y[1], 'o')
plt.text(Y[0] * (1 + 0.1), Y[1] * (1 - 0.1) , 'Y')
plt.plot(X[0], X[1], 'o')
plt.text(X[0] * (1 - 0.2), X[1] * (1) , 'X')
plt.plot(Z[0], Z[1], 'o')
plt.text(Z[0] * (1 + 0.03), Z[1] * (1 - 0.1) , 'Z')

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')


plt.savefig('triangle.pdf')

plt.show()